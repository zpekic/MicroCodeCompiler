
mcc V0.9.0325 - Custom microcode compiler (c)2020-... https://github.com/zpekic/MicroCodeCompiler

Compiling ..\..\1802\CDP180X.mcc, pass 1 out of 2.
Line 113: resolved aliases: reg_clr, 
L0113@0003._reset3: alu16_f = clear,  reg_hi <= alu16_yhi, reg_lo <= alu16_ylo;

Line 118: resolved aliases: addr_hi, sc_fetch, 
L0118@0004.fetch: sc = sc_fetch, amux = 1,   alu_mode <= binary, reg_addr <= p, reg_extend <= 0;

Line 119: resolved aliases: addr_hi, mrd, tpa, sc_fetch, 
L0119@0005.fetch1: sc = sc_fetch, amux = 1, tpa = 1, mrd = 0,  if fastMemAccess then next else fetch6;

Line 120: resolved aliases: addr_hi, mrd, tpa, sc_fetch, 
L0120@0006. sc = sc_fetch, amux = 1, tpa = 1, mrd = 0,  if tpa_wait then repeat else next;

Line 121: resolved aliases: addr_hi, mrd, sc_fetch, 
L0121@0007. sc = sc_fetch, amux = 1,  mrd = 0;

Line 122: resolved aliases: addr_lo, mrd, sc_fetch, 
L0122@0008. sc = sc_fetch, amux = 0,  mrd = 0;

Line 123: resolved aliases: addr_lo, mrd, tpb, sc_fetch, 
L0123@0009. sc = sc_fetch, amux = 0, tpb = 1, mrd = 0;

Line 124: resolved aliases: addr_lo, mrd, tpb, sc_fetch, 
L0124@000A.fetch6: sc = sc_fetch, amux = 0, tpb = 1, mrd = 0,  reg_in <= bus, if tpb_wait then repeat else next;

Line 125: resolved aliases: sample, fork, reg_inc, addr_lo, mrd, sc_fetch, 
L0125@000B. sc = sc_fetch, amux = 0,  mrd = 0,  alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, reg_addr <= n, reg_sample <= capture, if traceEnabled then traceState else if false then next else fork;

Line 130: resolved aliases: addr_hi, sc_execute, 
L0130@000C.read_b: sc = sc_execute, amux = 1, reg_n <= zero;

Line 131: resolved aliases: addr_hi, mrd, tpa, sc_execute, 
L0131@000D. sc = sc_execute, amux = 1, tpa = 1, mrd = 0, if fastMemAccess then next else read_b6;

Line 132: resolved aliases: addr_hi, mrd, tpa, sc_execute, 
L0132@000E. sc = sc_execute, amux = 1, tpa = 1, mrd = 0, if tpa_wait then repeat else next;

Line 133: resolved aliases: addr_hi, mrd, sc_execute, 
L0133@000F. sc = sc_execute, amux = 1,  mrd = 0;

Line 134: resolved aliases: addr_lo, mrd, sc_execute, 
L0134@0010. sc = sc_execute, amux = 0,  mrd = 0;

Line 135: resolved aliases: addr_lo, mrd, tpb, sc_execute, 
L0135@0011. sc = sc_execute, amux = 0, tpb = 1, mrd = 0;

Line 136: resolved aliases: addr_lo, mrd, tpb, sc_execute, 
L0136@0012.read_b6: sc = sc_execute, amux = 0, tpb = 1, mrd = 0, reg_b <= bus, if tpb_wait then repeat else next;

Line 137: resolved aliases: return, addr_lo, mrd, sc_execute, 
L0137@0013. sc = sc_execute, amux = 0,  mrd = 0, if false then next else return;

Line 142: resolved aliases: addr_hi, sc_execute, 
L0142@0014.write_b: sc = sc_execute, amux = 1, reg_n <= zero;

Line 143: resolved aliases: oe, addr_hi, tpa, sc_execute, 
L0143@0015. sc = sc_execute, amux = 1, tpa = 1, dataout = 0, if fastMemAccess then next else write_b6;

Line 144: resolved aliases: oe, addr_hi, tpa, sc_execute, 
L0144@0016. sc = sc_execute, amux = 1, tpa = 1, dataout = 0, if tpa_wait then repeat else next;

Line 145: resolved aliases: oe, addr_hi, mwr, sc_execute, 
L0145@0017. sc = sc_execute, amux = 1,  dataout = 0, mwr = 0;

Line 146: resolved aliases: oe, addr_lo, mwr, sc_execute, 
L0146@0018. sc = sc_execute, amux = 0,  dataout = 0, mwr = 0;

Line 147: resolved aliases: oe, addr_lo, mwr, tpb, sc_execute, 
L0147@0019. sc = sc_execute, amux = 0, tpb = 1, dataout = 0, mwr = 0;

Line 148: resolved aliases: oe, addr_lo, mwr, tpb, sc_execute, 
L0148@001A.write_b6: sc = sc_execute, amux = 0, tpb = 1, dataout = 0, mwr = 0, if tpb_wait then repeat else next;

Line 149: resolved aliases: return, oe, addr_lo, sc_execute, 
L0149@001B. sc = sc_execute, amux = 0,  dataout = 0, if false then next else return;

Line 160: resolved aliases: sc_interrupt, 
L0160@001F.int_ack: sc = sc_interrupt, reg_t <= xp;

Line 162: resolved aliases: goto, sc_interrupt, 
L0162@0020. sc = sc_interrupt, reg_p <= 1, reg_x <= two, reg_mie <= 0, if false then next else fetch;

Line 164: resolved aliases: addr_hi, sc_dma, 
L0164@0021.dma_in: sc = sc_dma, amux = 1, reg_n <= zero;

Line 165: resolved aliases: addr_hi, tpa, sc_dma, 
L0165@0022. sc = sc_dma, amux = 1, tpa = 1, if fastMemAccess then next else dma_in6;

Line 166: resolved aliases: addr_hi, tpa, sc_dma, 
L0166@0023. sc = sc_dma, amux = 1, tpa = 1, if tpa_wait then repeat else next;

Line 167: resolved aliases: addr_hi, mwr, sc_dma, 
L0167@0024. sc = sc_dma, amux = 1,  mwr = 0;

Line 168: resolved aliases: addr_lo, mwr, sc_dma, 
L0168@0025. sc = sc_dma, amux = 0,  mwr = 0;

Line 169: resolved aliases: addr_lo, mwr, tpb, sc_dma, 
L0169@0026. sc = sc_dma, amux = 0, tpb = 1, mwr = 0;

Line 170: resolved aliases: sample, addr_lo, mwr, tpb, sc_dma, 
L0170@0027.dma_in6: sc = sc_dma, amux = 0, tpb = 1, mwr = 0, reg_sample <= capture, if tpb_wait then repeat else next;

Line 171: resolved aliases: reg_inc, addr_lo, sc_dma, 
L0171@0028. sc = sc_dma, amux = 0,  alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 173: resolved aliases: addr_hi, sc_dma, 
L0173@0029.dma_out: sc = sc_dma, amux = 1, reg_n <= zero;

Line 174: resolved aliases: addr_hi, mrd, tpa, sc_dma, 
L0174@002A. sc = sc_dma, amux = 1, tpa = 1, mrd = 0, if fastMemAccess then next else dma_out6;

Line 175: resolved aliases: addr_hi, mrd, tpa, sc_dma, 
L0175@002B. sc = sc_dma, amux = 1, tpa = 1, mrd = 0, if tpa_wait then repeat else next;

Line 176: resolved aliases: addr_hi, mrd, sc_dma, 
L0176@002C. sc = sc_dma, amux = 1,  mrd = 0;

Line 177: resolved aliases: addr_lo, mrd, sc_dma, 
L0177@002D. sc = sc_dma, amux = 0,  mrd = 0;

Line 178: resolved aliases: addr_lo, mrd, tpb, sc_dma, 
L0178@002E. sc = sc_dma, amux = 0, tpb = 1, mrd = 0;

Line 179: resolved aliases: addr_lo, mrd, tpb, sc_dma, 
L0179@002F.dma_out6: sc = sc_dma, amux = 0, tpb = 1, mrd = 0, if tpb_wait then repeat else next;

Line 180: resolved aliases: reg_inc, addr_lo, mrd, sc_dma, 
L0180@0030. sc = sc_dma, amux = 0,  mrd = 0, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 189: resolved aliases: trace, 
L0189@0031.traceState: reg_trace <= ss_disable_char, if true then traceChar else 'D';

Line 190: resolved aliases: trace, 
L0190@0032. reg_trace <= ss_disable_char, if true then traceChar else '= ';

Line 191: resolved aliases: gosub, 
L0191@0033. if false then next else traceB;

Line 193: resolved aliases: trace, 
L0193@0034. reg_b <= flags, reg_trace <= ss_disable_char, if true then traceChar else 'F';

Line 194: resolved aliases: trace, 
L0194@0035. reg_trace <= ss_disable_char, if true then traceChar else 'L';

Line 195: resolved aliases: gosub, 
L0195@0036. if false then next else traceB;

Line 197: resolved aliases: trace, 
L0197@0037. reg_b <= xp, reg_trace <= ss_disable_char, if true then traceChar else 'X';

Line 198: resolved aliases: trace, 
L0198@0038. reg_trace <= ss_disable_char, if true then traceChar else 'P';

Line 199: resolved aliases: gosub, 
L0199@0039. if false then next else traceB;

Line 201: resolved aliases: trace, 
L0201@003A. reg_b <= in, reg_trace <= ss_disable_char, if true then traceChar else 'I';

Line 202: resolved aliases: trace, 
L0202@003B. reg_trace <= ss_disable_char, if true then traceChar else 'N';

Line 203: resolved aliases: gosub, 
L0203@003C. if false then next else traceB;

Line 205: resolved aliases: trace, 
L0205@003D. reg_addr <= zero, reg_trace <= ss_disable_char, if true then traceChar else 'R';

Line 206: resolved aliases: trace, 
L0206@003E. reg_trace <= ss_disable_char, if true then traceChar else '0';

Line 207: resolved aliases: gosub, 
L0207@003F. if false then next else traceReg;

Line 209: resolved aliases: trace, 
L0209@0040. reg_addr <= one, reg_trace <= ss_disable_char, if true then traceChar else 'R';

Line 210: resolved aliases: trace, 
L0210@0041. reg_trace <= ss_disable_char, if true then traceChar else '1';

Line 211: resolved aliases: gosub, 
L0211@0042. if false then next else traceReg;

Line 213: resolved aliases: trace, 
L0213@0043. reg_addr <= two, reg_trace <= ss_disable_char, if true then traceChar else 'R';

Line 214: resolved aliases: trace, 
L0214@0044. reg_trace <= ss_disable_char, if true then traceChar else '2';

Line 215: resolved aliases: gosub, 
L0215@0045. if false then next else traceReg;

Line 217: resolved aliases: trace, 
L0217@0046. reg_addr <= x, reg_trace <= ss_disable_char, if true then traceChar else 'R';

Line 218: resolved aliases: trace, 
L0218@0047. reg_trace <= ss_disable_char, if true then traceChar else 'X';

Line 219: resolved aliases: gosub, 
L0219@0048. if false then next else traceReg;

Line 221: resolved aliases: trace, 
L0221@0049. reg_addr <= p, reg_trace <= ss_disable_char, if true then traceChar else 'R';

Line 222: resolved aliases: trace, 
L0222@004A. reg_trace <= ss_disable_char, if true then traceChar else 'P';

Line 223: resolved aliases: gosub, 
L0223@004B. if false then next else traceReg;

Line 225: resolved aliases: trace, 
L0225@004C. reg_addr <= n, reg_trace <= ss_disable_char, if true then traceChar else 'R';

Line 226: resolved aliases: trace, 
L0226@004D. reg_trace <= ss_disable_char, if true then traceChar else 'P';

Line 227: resolved aliases: gosub, 
L0227@004E. if false then next else traceReg;

Line 229: resolved aliases: trace, CR, 
L0229@004F. reg_trace <= ss_disable_char, if true then traceChar else 0x0D;

Line 230: resolved aliases: trace, LF, 
L0230@0050. reg_trace <= ss_disable_char, if true then traceChar else 0x0A;

Line 232: resolved aliases: fork, 
L0232@0051. reg_trace <= ss_enable_zero, if false then next else fork;

Line 234: resolved aliases: trace, 
L0234@0052.traceReg: reg_trace <= ss_disable_char, if true then traceChar else '= ';

Line 235: resolved aliases: y_hi, trace, 
L0235@0053. alu_f = ior, alu_r = reg_hi, alu_s = zero, reg_trace <= ss_disable_char, if true then traceChar else 0b10000_001;

Line 236: resolved aliases: y_hi, trace, 
L0236@0054. alu_f = ior, alu_r = reg_hi, alu_s = zero, reg_trace <= ss_disable_char, if true then traceChar else 0b10000_000;

Line 237: resolved aliases: y_lo, trace, 
L0237@0055. alu_f = ior, alu_r = zero, alu_s = reg_lo, reg_trace <= ss_disable_char, if true then traceChar else 0b10000_001;

Line 238: resolved aliases: y_lo, trace, 
L0238@0056. alu_f = ior, alu_r = zero, alu_s = reg_lo, reg_trace <= ss_disable_char, if true then traceChar else 0b10000_000;

Line 239: resolved aliases: trace, 
L0239@0057. reg_trace <= ss_disable_char, if true then traceChar else ' ';

Line 240: resolved aliases: return, 
L0240@0058. if false then next else return;

Line 242: resolved aliases: trace, 
L0242@0059.traceB: reg_trace <= ss_disable_char, if true then traceChar else '= ';

Line 243: resolved aliases: y_b, trace, 
L0243@005A. alu_f = ior, alu_r = zero, alu_s = b, reg_trace <= ss_disable_char, if true then traceChar else 0b10000_001;

Line 244: resolved aliases: y_b, trace, 
L0244@005B. alu_f = ior, alu_r = zero, alu_s = b, reg_trace <= ss_disable_char, if true then traceChar else 0b10000_000;

Line 245: resolved aliases: trace, 
L0245@005C. reg_trace <= ss_disable_char, if true then traceChar else ' ';

Line 246: resolved aliases: return, 
L0246@005D. if false then next else return;

Line 249: resolved aliases: return, 
L0249@005F. reg_trace <= ss_disable_zero, if false then next else return;

Line 255: resolved aliases: gosub, 
L0255@0060.LDN: if false then next else read_b;

Line 257: resolved aliases: y_b, 
L0257@0061. reg_d <= alu_y, alu_f = ior, alu_r = zero, alu_s = b, if continue then fetch else dma_or_int;

Line 261: resolved aliases: sample, 
L0261@0062.IDL: reg_sample <= capture;

Line 266: resolved aliases: reg_inc, 
L0266@0064.INC: alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 270: resolved aliases: reg_dec, 
L0270@0065.DEC: alu16_f = minus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 277: resolved aliases: gosub, 
L0277@0067. if false then next else read_b;

Line 279: resolved aliases: y_b, 
L0279@0068.sbranch2: reg_lo <= alu_y, alu_f = ior, alu_r = zero, alu_s = b, if continue then fetch else dma_or_int;

Line 283: resolved aliases: gosub, 
L0283@0069.LDA: if false then next else read_b;

Line 285: resolved aliases: goto, y_b, 
L0285@006A. reg_d <= alu_y, alu_f = ior, alu_r = zero, alu_s = b, if false then next else INC;

Line 289: resolved aliases: gosub, y_d, 
L0289@006B.STR: reg_b <= alu_y, alu_f = ior, alu_r = d, alu_s = zero, if false then next else write_b;

Line 294: resolved aliases: addr_hi, sc_execute, 
L0294@006D.OUT: sc = sc_execute, amux = 1, reg_addr <= x, reg_n <= n;

Line 295: resolved aliases: addr_hi, mrd, tpa, sc_execute, 
L0295@006E. sc = sc_execute, amux = 1, tpa = 1, mrd = 0, if fastMemAccess then next else out6;

Line 296: resolved aliases: addr_hi, mrd, tpa, sc_execute, 
L0296@006F. sc = sc_execute, amux = 1, tpa = 1, mrd = 0, if tpa_wait then repeat else next;

Line 297: resolved aliases: addr_hi, mrd, sc_execute, 
L0297@0070. sc = sc_execute, amux = 1,  mrd = 0;

Line 298: resolved aliases: addr_lo, mrd, sc_execute, 
L0298@0071. sc = sc_execute, amux = 0,  mrd = 0;

Line 299: resolved aliases: addr_lo, mrd, tpb, sc_execute, 
L0299@0072. sc = sc_execute, amux = 0, tpb = 1, mrd = 0;

Line 300: resolved aliases: addr_lo, mrd, tpb, sc_execute, 
L0300@0073.out6: sc = sc_execute, amux = 0, tpb = 1, mrd = 0, if tpb_wait then repeat else next;

Line 301: resolved aliases: goto, addr_lo, mrd, sc_execute, 
L0301@0074. sc = sc_execute, amux = 0,  mrd = 0, reg_n <= zero, if false then next else INC;

Line 305: resolved aliases: goto, 
L0305@0075.IRX: reg_addr <= x, if false then next else INC;

Line 309: resolved aliases: addr_hi, sc_execute, 
L0309@0076.INP: sc = sc_execute, amux = 1, reg_addr <= x, reg_n <= n, reg_enableoutput <= false;

Line 310: resolved aliases: addr_hi, tpa, sc_execute, 
L0310@0077. sc = sc_execute, amux = 1, tpa = 1, if fastMemAccess then next else write_b6;

Line 311: resolved aliases: addr_hi, tpa, sc_execute, 
L0311@0078. sc = sc_execute, amux = 1, tpa = 1, if tpa_wait then repeat else next;

Line 312: resolved aliases: addr_hi, mwr, sc_execute, 
L0312@0079. sc = sc_execute, amux = 1,  mwr = 0;

Line 313: resolved aliases: addr_lo, mwr, sc_execute, 
L0313@007A. sc = sc_execute, amux = 0,  mwr = 0;

Line 314: resolved aliases: addr_lo, mwr, tpb, sc_execute, 
L0314@007B. sc = sc_execute, amux = 0, tpb = 1, mwr = 0;

Line 315: resolved aliases: addr_lo, mwr, tpb, sc_execute, 
L0315@007C.inp6: sc = sc_execute, amux = 0, tpb = 1, mwr = 0, reg_b <= bus, if tpb_wait then repeat else next;

Line 316: resolved aliases: y_b, addr_lo, sc_execute, 
L0316@007D. sc = sc_execute, amux = 0,  reg_n <= zero, reg_d <= alu_y, alu_f = ior, alu_r = zero, alu_s = b, if continue then fetch else dma_or_int;

Line 322: resolved aliases: goto, addr_hi, sc_fetch, 
L0322@007F. sc = sc_fetch, amux = 1, alu_mode <= decimal, reg_addr <= p, reg_extend <= one, if false then next else fetch1;

Line 326: resolved aliases: gosub, 
L0326@0080.RET: reg_addr <= x, if false then next else read_b;

Line 328: resolved aliases: goto, 
L0328@0081. reg_x <= b_hi, reg_p <= b_lo, reg_mie <= one, if false then next else INC;

Line 331: resolved aliases: gosub, 
L0331@0082.DIS: reg_addr <= x, if false then next else read_b;

Line 333: resolved aliases: goto, 
L0333@0083. reg_x <= b_hi, reg_p <= b_lo, reg_mie <= zero, if false then next else INC;

Line 336: resolved aliases: gosub, 
L0336@0084.LDXA: reg_addr <= x, if false then next else read_b;

Line 338: resolved aliases: goto, y_b, 
L0338@0085. reg_d <= alu_y, alu_f = ior, alu_r = zero, alu_s = b, if false then next else INC;

Line 342: resolved aliases: gosub, y_d, 
L0342@0086.STXD: reg_addr <= x, reg_b <= alu_y, alu_f = ior, alu_r = d, alu_s = zero, if false then next else write_b;

Line 344: resolved aliases: reg_dec, 
L0344@0087. alu16_f = minus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 347: resolved aliases: gosub, 
L0347@0088.ADC: reg_addr <= x, if false then next else read_b;

Line 353: resolved aliases: gosub, 
L0353@008A.SDB: reg_addr <= x, if false then next else read_b;

Line 363: resolved aliases: gosub, 
L0363@008D.SMB: reg_addr <= x, if false then next else read_b;

Line 369: resolved aliases: gosub, 
L0369@008F.SAV: reg_addr <= x, reg_b <= t, if false then next else write_b;

Line 376: resolved aliases: gosub, 
L0376@0092. reg_b <= t, if false then next else write_b;

Line 378: resolved aliases: goto, 
L0378@0093. reg_x <= p, if false then next else DEC;

Line 389: resolved aliases: gosub, 
L0389@0096.ADCI: reg_addr <= p, if false then next else read_b;

Line 391: resolved aliases: reg_inc, 
L0391@0097. reg_df <= alu_cout, reg_d <= alu_y, alu_f = adc, alu_r = d, alu_s = b, alu_cin = df, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 397: resolved aliases: gosub, 
L0397@0098.SDBI: reg_addr <= p, if false then next else read_b;

Line 399: resolved aliases: reg_inc, 
L0399@0099. reg_df <= alu_cout, reg_d <= alu_y, alu_f = adc, alu_r = b, alu_s = notd, alu_cin = df, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 408: resolved aliases: gosub, 
L0408@009B.SMBI: reg_addr <= p, if false then next else read_b;

Line 410: resolved aliases: reg_inc, 
L0410@009C. reg_df <= alu_cout, reg_d <= alu_y, alu_f = adc, alu_r = d, alu_s = notb, alu_cin = df, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 415: resolved aliases: y_lo, 
L0415@009D.GLO: reg_d <= alu_y, alu_f = ior, alu_r = zero, alu_s = reg_lo, if continue then fetch else dma_or_int;

Line 419: resolved aliases: y_hi, 
L0419@009E.GHI: reg_d <= alu_y, alu_f = ior, alu_r = reg_hi, alu_s = zero, if continue then fetch else dma_or_int;

Line 423: resolved aliases: y_d, 
L0423@009F.PLO: reg_lo <= alu_y, alu_f = ior, alu_r = d, alu_s = zero, if continue then fetch else dma_or_int;

Line 427: resolved aliases: y_d, 
L0427@00A0.PHI: reg_hi <= alu_y, alu_f = ior, alu_r = d, alu_s = zero, if continue then fetch else dma_or_int;

Line 433: resolved aliases: gosub, 
L0433@00A2. if false then next else read_b;

Line 435: resolved aliases: gosub, reg_inc, 
L0435@00A3. reg_t <= b, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if false then next else read_b;

Line 437: resolved aliases: y_b, 
L0437@00A4. reg_lo <= alu_y, alu_f = ior, alu_r = zero, alu_s = b, reg_b <= t;

Line 439: resolved aliases: y_b, 
L0439@00A5. reg_hi <= alu_y, alu_f = ior, alu_r = zero, alu_s = b, if continue then fetch else dma_or_int;

Line 441: resolved aliases: goto, reg_inc, 
L0441@00A6.inc2: alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if false then next else INC;

Line 456: resolved aliases: gosub, 
L0456@00AA.LDX: reg_addr <= x, if false then next else read_b;

Line 458: resolved aliases: y_b, 
L0458@00AB. reg_d <= alu_y, alu_f = ior, alu_r = zero, alu_s = b, if continue then fetch else dma_or_int;

Line 462: resolved aliases: gosub, 
L0462@00AC.OR: reg_addr <= x, if false then next else read_b;

Line 468: resolved aliases: gosub, 
L0468@00AE.AND: reg_addr <= x, if false then next else read_b;

Line 474: resolved aliases: gosub, 
L0474@00B0.XOR: reg_addr <= x, if false then next else read_b;

Line 480: resolved aliases: gosub, 
L0480@00B2.ADD: reg_addr <= x, if false then next else read_b;

Line 486: resolved aliases: gosub, 
L0486@00B4.SD: reg_addr <= x, if false then next else read_b;

Line 496: resolved aliases: gosub, 
L0496@00B7.SM: reg_addr <= x, if false then next else read_b;

Line 502: resolved aliases: gosub, 
L0502@00B9.LDI: reg_addr <= p, if false then next else read_b;

Line 504: resolved aliases: reg_inc, y_b, 
L0504@00BA. reg_d <= alu_y, alu_f = ior, alu_r = zero, alu_s = b, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 509: resolved aliases: gosub, 
L0509@00BB.ORI: reg_addr <= p, if false then next else read_b;

Line 511: resolved aliases: reg_inc, 
L0511@00BC. reg_d <= alu_y, alu_f = ior, alu_r = d, alu_s = b, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 516: resolved aliases: gosub, 
L0516@00BD.ANI: reg_addr <= p, if false then next else read_b;

Line 518: resolved aliases: reg_inc, 
L0518@00BE. reg_d <= alu_y, alu_f = and, alu_r = d, alu_s = b, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 523: resolved aliases: gosub, 
L0523@00BF.XRI: reg_addr <= p, if false then next else read_b;

Line 525: resolved aliases: reg_inc, 
L0525@00C0. reg_d <= alu_y, alu_f = xor, alu_r = d, alu_s = b, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 530: resolved aliases: gosub, 
L0530@00C1.ADI: reg_addr <= p, if false then next else read_b;

Line 532: resolved aliases: reg_inc, 
L0532@00C2. reg_df <= alu_cout, reg_d <= alu_y, alu_f = adc, alu_r = d, alu_s = b, alu_cin = zero, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 537: resolved aliases: gosub, 
L0537@00C3.SDI: reg_addr <= p, if false then next else read_b;

Line 539: resolved aliases: reg_inc, 
L0539@00C4. reg_df <= alu_cout, reg_d <= alu_y, alu_f = adc, alu_r = b, alu_s = notd, alu_cin = one, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 548: resolved aliases: gosub, 
L0548@00C6.SMI: reg_addr <= p, if false then next else read_b;

Line 550: resolved aliases: reg_inc, 
L0550@00C7. reg_df <= alu_cout, reg_d <= alu_y, alu_f = adc, alu_r = d, alu_s = notb, alu_cin = one, alu16_f = plus_one, reg_hi <= alu16_yhi, reg_lo <= alu16_ylo, if continue then fetch else dma_or_int;

Line 558: resolved aliases: goto, 
L0558@00C8.XNOP: if false then next else NOP;

Pass 1 succeeded: 558 line(s) read, 315 statement(s) parsed.
Compiling ..., pass 2 out of 2.
Field 'seq_cond' 71 .. 68
Field 'seq_then' 67 .. 60
Field 'seq_else' 59 .. 52
Field 'reg_d' 51 .. 50
Field 'reg_df' 49 .. 48
Field 'reg_b' 47 .. 45
Field 'reg_p' 44 .. 43
Field 'reg_x' 42 .. 41
Field 'reg_in' 40 .. 40
Field 'reg_t' 39 .. 37
Field 'reg_q' 36 .. 35
Field 'reg_mie' 34 .. 33
Field 'reg_trace' 32 .. 31
Field 'reg_extend' 30 .. 29
Field 'reg_n' 28 .. 27
Field 'reg_sample' 26 .. 26
Field 'reg_lo' 25 .. 25
Field 'reg_hi' 24 .. 24
Field 'reg_addr' 23 .. 21
Field 'alu16_f' 20 .. 19
Field 'alu_r' 18 .. 17
Field 'alu_s' 16 .. 14
Field 'alu_f' 13 .. 12
Field 'alu_cin' 11 .. 10
Field 'alu_mode' 9 .. 8
Field 'sc' 7 .. 6
Field 'tpa' 5 .. 5
Field 'tpb' 4 .. 4
Field 'mrd' 3 .. 3
Field 'mwr' 2 .. 2
Field 'amux' 1 .. 1
Field 'dataout' 0 .. 0
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_01_00_01_00_01_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0000
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_001_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0001
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_01_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0002
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_01_00_000_00_00_01_01_0_0_1_1_0_1' to 0003
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_00_0_0_1_1_1_1' to 0004
Code: Writing '0110_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_00_1_0_0_1_1_1' to 0005
Code: Writing '0100_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_00_1_0_0_1_1_1' to 0006
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_00_0_0_0_1_1_1' to 0007
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_00_0_0_0_1_0_1' to 0008
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_00_0_1_0_1_0_1' to 0009
Code: Writing '0101_00000001_00000000_00_00_000_00_00_1_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_00_0_1_0_1_0_1' to 000A
Line 125: found unmatched <= assignments: capture, 
Code: Writing '1101_00110001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_101_10_00_000_00_00_01_00_0_0_0_1_0_1' to 000B
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_01_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_1_1' to 000C
Code: Writing '0110_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_1_0_0_1_1_1' to 000D
Code: Writing '0100_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_1_0_0_1_1_1' to 000E
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_0_1_1_1' to 000F
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_0_1_0_1' to 0010
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_1_0_1_0_1' to 0011
Code: Writing '0101_00000001_00000000_00_00_010_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_1_0_1_0_1' to 0012
Code: Writing '1111_00000000_00000010_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_0_1_0_1' to 0013
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_01_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_1_1' to 0014
Code: Writing '0110_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_1_0_1_1_1_0' to 0015
Code: Writing '0100_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_1_0_1_1_1_0' to 0016
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_0_1_0' to 0017
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_0_0_0' to 0018
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_1_1_0_0_0' to 0019
Code: Writing '0101_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_1_1_0_0_0' to 001A
Code: Writing '1111_00000000_00000010_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_0' to 001B
Code: Writing '0111_00100001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 001C
Code: Writing '1000_00101001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 001D
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 001E
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_001_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_11_0_0_1_1_0_1' to 001F
Code: Writing '1111_00000000_00000000_00_00_000_01_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_11_0_0_1_1_0_1' to 0020
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_01_0_0_0_001_00_00_000_00_00_01_10_0_0_1_1_1_1' to 0021
Code: Writing '0110_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_1_0_1_1_1_1' to 0022
Code: Writing '0100_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_1_0_1_1_1_1' to 0023
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_0_0_1_0_1_1' to 0024
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_0_0_1_0_0_1' to 0025
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_0_1_1_0_0_1' to 0026
Line 170: found unmatched <= assignments: capture, 
Code: Writing '0101_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_0_1_1_0_0_1' to 0027
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_00_000_00_00_01_10_0_0_1_1_0_1' to 0028
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_01_0_0_0_001_00_00_000_00_00_01_10_0_0_1_1_1_1' to 0029
Code: Writing '0110_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_1_0_0_1_1_1' to 002A
Code: Writing '0100_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_1_0_0_1_1_1' to 002B
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_0_0_0_1_1_1' to 002C
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_0_0_0_1_0_1' to 002D
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_0_1_0_1_0_1' to 002E
Code: Writing '0101_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_10_0_1_0_1_0_1' to 002F
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_00_000_00_00_01_10_0_0_0_1_0_1' to 0030
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0031
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0032
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0033
Code: Writing '0000_01011110_00000000_00_00_100_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0034
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0035
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0036
Code: Writing '0000_01011110_00000000_00_00_101_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0037
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0038
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0039
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 003A
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 003B
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 003C
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 003D
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 003E
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 003F
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_010_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0040
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0041
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0042
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_011_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0043
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0044
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0045
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0046
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0047
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0048
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0049
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 004A
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 004B
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_101_00_00_000_00_00_01_01_0_0_1_1_0_1' to 004C
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 004D
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 004E
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 004F
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0050
Code: Writing '1111_00000000_00000011_00_00_000_00_00_0_000_00_00_01_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0051
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0052
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_11_000_00_00_01_01_0_0_1_1_0_1' to 0053
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_11_000_00_00_01_01_0_0_1_1_0_1' to 0054
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_011_00_00_01_01_0_0_1_1_0_1' to 0055
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_011_00_00_01_01_0_0_1_1_0_1' to 0056
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0057
Code: Writing '1111_00000000_00000010_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0058
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0059
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_001_00_00_01_01_0_0_1_1_0_1' to 005A
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_001_00_00_01_01_0_0_1_1_0_1' to 005B
Code: Writing '0000_01011110_00000000_00_00_000_00_00_0_000_00_00_11_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 005C
Code: Writing '1111_00000000_00000010_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 005D
Code: Writing '1110_00000000_00000001_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 005E
Code: Writing '1111_00000000_00000010_00_00_000_00_00_0_000_00_00_10_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 005F
Mapper: Writing '01100000' to 0000
Mapper: Writing '01100000' to 0001
Mapper: Writing '01100000' to 0002
Mapper: Writing '01100000' to 0003
Mapper: Writing '01100000' to 0004
Mapper: Writing '01100000' to 0005
Mapper: Writing '01100000' to 0006
Mapper: Writing '01100000' to 0007
Mapper: Writing '01100000' to 0008
Mapper: Writing '01100000' to 0009
Mapper: Writing '01100000' to 000A
Mapper: Writing '01100000' to 000B
Mapper: Writing '01100000' to 000C
Mapper: Writing '01100000' to 000D
Mapper: Writing '01100000' to 000E
Mapper: Writing '01100000' to 000F
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0060
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_001_00_00_01_01_0_0_1_1_0_1' to 0061
Mapper: Overwriting '01100000' with '01100010' at 0000
Line 261: found unmatched <= assignments: capture, 
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0062
Code: Writing '0010_01100010_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0063
Mapper: Writing '01100100' to 0010
Mapper: Writing '01100100' to 0011
Mapper: Writing '01100100' to 0012
Mapper: Writing '01100100' to 0013
Mapper: Writing '01100100' to 0014
Mapper: Writing '01100100' to 0015
Mapper: Writing '01100100' to 0016
Mapper: Writing '01100100' to 0017
Mapper: Writing '01100100' to 0018
Mapper: Writing '01100100' to 0019
Mapper: Writing '01100100' to 001A
Mapper: Writing '01100100' to 001B
Mapper: Writing '01100100' to 001C
Mapper: Writing '01100100' to 001D
Mapper: Writing '01100100' to 001E
Mapper: Writing '01100100' to 001F
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_00_000_00_00_01_01_0_0_1_1_0_1' to 0064
Mapper: Writing '01100101' to 0020
Mapper: Writing '01100101' to 0021
Mapper: Writing '01100101' to 0022
Mapper: Writing '01100101' to 0023
Mapper: Writing '01100101' to 0024
Mapper: Writing '01100101' to 0025
Mapper: Writing '01100101' to 0026
Mapper: Writing '01100101' to 0027
Mapper: Writing '01100101' to 0028
Mapper: Writing '01100101' to 0029
Mapper: Writing '01100101' to 002A
Mapper: Writing '01100101' to 002B
Mapper: Writing '01100101' to 002C
Mapper: Writing '01100101' to 002D
Mapper: Writing '01100101' to 002E
Mapper: Writing '01100101' to 002F
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_11_00_000_00_00_01_01_0_0_1_1_0_1' to 0065
Mapper: Writing '01100110' to 0030
Mapper: Writing '01100110' to 0031
Mapper: Writing '01100110' to 0032
Mapper: Writing '01100110' to 0033
Mapper: Writing '01100110' to 0034
Mapper: Writing '01100110' to 0035
Mapper: Writing '01100110' to 0036
Mapper: Writing '01100110' to 0037
Mapper: Writing '01100110' to 0038
Mapper: Writing '01100110' to 0039
Mapper: Writing '01100110' to 003A
Mapper: Writing '01100110' to 003B
Mapper: Writing '01100110' to 003C
Mapper: Writing '01100110' to 003D
Mapper: Writing '01100110' to 003E
Mapper: Writing '01100110' to 003F
Code: Writing '0011_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0066
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0067
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_1_0_001_00_00_001_00_00_01_01_0_0_1_1_0_1' to 0068
Mapper: Writing '01101001' to 0040
Mapper: Writing '01101001' to 0041
Mapper: Writing '01101001' to 0042
Mapper: Writing '01101001' to 0043
Mapper: Writing '01101001' to 0044
Mapper: Writing '01101001' to 0045
Mapper: Writing '01101001' to 0046
Mapper: Writing '01101001' to 0047
Mapper: Writing '01101001' to 0048
Mapper: Writing '01101001' to 0049
Mapper: Writing '01101001' to 004A
Mapper: Writing '01101001' to 004B
Mapper: Writing '01101001' to 004C
Mapper: Writing '01101001' to 004D
Mapper: Writing '01101001' to 004E
Mapper: Writing '01101001' to 004F
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0069
Code: Writing '1111_00000000_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_001_00_00_01_01_0_0_1_1_0_1' to 006A
Mapper: Writing '01101011' to 0050
Mapper: Writing '01101011' to 0051
Mapper: Writing '01101011' to 0052
Mapper: Writing '01101011' to 0053
Mapper: Writing '01101011' to 0054
Mapper: Writing '01101011' to 0055
Mapper: Writing '01101011' to 0056
Mapper: Writing '01101011' to 0057
Mapper: Writing '01101011' to 0058
Mapper: Writing '01101011' to 0059
Mapper: Writing '01101011' to 005A
Mapper: Writing '01101011' to 005B
Mapper: Writing '01101011' to 005C
Mapper: Writing '01101011' to 005D
Mapper: Writing '01101011' to 005E
Mapper: Writing '01101011' to 005F
Code: Writing '1111_00000000_00000000_00_00_001_00_00_0_000_00_00_00_00_00_0_0_0_001_00_01_000_00_00_01_01_0_0_1_1_0_1' to 006B
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 006C
Mapper: Writing '01101101' to 0060
Mapper: Writing '01101101' to 0061
Mapper: Writing '01101101' to 0062
Mapper: Writing '01101101' to 0063
Mapper: Writing '01101101' to 0064
Mapper: Writing '01101101' to 0065
Mapper: Writing '01101101' to 0066
Mapper: Writing '01101101' to 0067
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_10_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_1_1' to 006D
Code: Writing '0110_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_1_0_0_1_1_1' to 006E
Code: Writing '0100_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_1_0_0_1_1_1' to 006F
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_0_1_1_1' to 0070
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_0_1_0_1' to 0071
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_1_0_1_0_1' to 0072
Code: Writing '0101_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_1_0_1_0_1' to 0073
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_01_0_0_0_001_00_00_000_00_00_01_01_0_0_0_1_0_1' to 0074
Mapper: Overwriting '01101101' with '01110101' at 0060
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0075
Mapper: Writing '01110110' to 0068
Mapper: Writing '01110110' to 0069
Mapper: Writing '01110110' to 006A
Mapper: Writing '01110110' to 006B
Mapper: Writing '01110110' to 006C
Mapper: Writing '01110110' to 006D
Mapper: Writing '01110110' to 006E
Mapper: Writing '01110110' to 006F
Line 309: found unmatched <= assignments: false, 
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_10_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_1_1' to 0076
Code: Writing '0110_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_1_0_1_1_1_1' to 0077
Code: Writing '0100_00000001_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_1_0_1_1_1_1' to 0078
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_0_1_1' to 0079
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_0_0_1' to 007A
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_1_1_0_0_1' to 007B
Code: Writing '0101_00000001_00000000_00_00_010_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_1_1_0_0_1' to 007C
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_01_0_0_0_001_00_00_001_00_00_01_01_0_0_1_1_0_1' to 007D
Mapper: Overwriting '01110110' with '01111110' at 0068
Code: Writing '0001_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 007E
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_10_00_0_0_0_110_00_00_000_00_00_10_00_0_0_1_1_1_1' to 007F
Mapper: Writing '10000000' to 0070
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0080
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0081
Mapper: Writing '10000010' to 0071
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0082
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0083
Mapper: Writing '10000100' to 0072
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0084
Code: Writing '1111_00000000_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_001_00_00_01_01_0_0_1_1_0_1' to 0085
Mapper: Writing '10000110' to 0073
Code: Writing '1111_00000000_00000000_00_00_001_00_00_0_000_00_00_00_00_00_0_0_0_100_00_01_000_00_00_01_01_0_0_1_1_0_1' to 0086
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_11_00_000_00_00_01_01_0_0_1_1_0_1' to 0087
Mapper: Writing '10001000' to 0074
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0088
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_01_001_11_00_01_01_0_0_1_1_0_1' to 0089
Mapper: Writing '10001010' to 0075
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 008A
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_11_00_01_01_0_0_1_1_0_1' to 008B
Mapper: Writing '10001100' to 0076
Line 359: found unmatched = assignments: df, 
Code: Writing '0010_00000100_00000000_11_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 008C
Mapper: Writing '10001101' to 0077
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 008D
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_01_000_11_00_01_01_0_0_1_1_0_1' to 008E
Mapper: Writing '10001111' to 0078
Code: Writing '1111_00000000_00000000_00_00_011_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 008F
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0090
Mapper: Writing '10010001' to 0079
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_001_00_00_00_00_00_0_0_0_011_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0091
Code: Writing '1111_00000000_00000000_00_00_011_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0092
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0093
Mapper: Writing '10010100' to 007A
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_01_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0094
Mapper: Writing '10010101' to 007B
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_10_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0095
Mapper: Writing '10010110' to 007C
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0096
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_01_001_11_00_01_01_0_0_1_1_0_1' to 0097
Mapper: Writing '10011000' to 007D
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 0098
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_00_000_11_00_01_01_0_0_1_1_0_1' to 0099
Mapper: Writing '10011010' to 007E
Line 405: found unmatched = assignments: df, 
Code: Writing '0010_00000100_00000000_10_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 009A
Mapper: Writing '10011011' to 007F
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 009B
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_01_000_11_00_01_01_0_0_1_1_0_1' to 009C
Mapper: Writing '10011101' to 0080
Mapper: Writing '10011101' to 0081
Mapper: Writing '10011101' to 0082
Mapper: Writing '10011101' to 0083
Mapper: Writing '10011101' to 0084
Mapper: Writing '10011101' to 0085
Mapper: Writing '10011101' to 0086
Mapper: Writing '10011101' to 0087
Mapper: Writing '10011101' to 0088
Mapper: Writing '10011101' to 0089
Mapper: Writing '10011101' to 008A
Mapper: Writing '10011101' to 008B
Mapper: Writing '10011101' to 008C
Mapper: Writing '10011101' to 008D
Mapper: Writing '10011101' to 008E
Mapper: Writing '10011101' to 008F
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_011_00_00_01_01_0_0_1_1_0_1' to 009D
Mapper: Writing '10011110' to 0090
Mapper: Writing '10011110' to 0091
Mapper: Writing '10011110' to 0092
Mapper: Writing '10011110' to 0093
Mapper: Writing '10011110' to 0094
Mapper: Writing '10011110' to 0095
Mapper: Writing '10011110' to 0096
Mapper: Writing '10011110' to 0097
Mapper: Writing '10011110' to 0098
Mapper: Writing '10011110' to 0099
Mapper: Writing '10011110' to 009A
Mapper: Writing '10011110' to 009B
Mapper: Writing '10011110' to 009C
Mapper: Writing '10011110' to 009D
Mapper: Writing '10011110' to 009E
Mapper: Writing '10011110' to 009F
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_11_000_00_00_01_01_0_0_1_1_0_1' to 009E
Mapper: Writing '10011111' to 00A0
Mapper: Writing '10011111' to 00A1
Mapper: Writing '10011111' to 00A2
Mapper: Writing '10011111' to 00A3
Mapper: Writing '10011111' to 00A4
Mapper: Writing '10011111' to 00A5
Mapper: Writing '10011111' to 00A6
Mapper: Writing '10011111' to 00A7
Mapper: Writing '10011111' to 00A8
Mapper: Writing '10011111' to 00A9
Mapper: Writing '10011111' to 00AA
Mapper: Writing '10011111' to 00AB
Mapper: Writing '10011111' to 00AC
Mapper: Writing '10011111' to 00AD
Mapper: Writing '10011111' to 00AE
Mapper: Writing '10011111' to 00AF
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_1_0_001_00_01_000_00_00_01_01_0_0_1_1_0_1' to 009F
Mapper: Writing '10100000' to 00B0
Mapper: Writing '10100000' to 00B1
Mapper: Writing '10100000' to 00B2
Mapper: Writing '10100000' to 00B3
Mapper: Writing '10100000' to 00B4
Mapper: Writing '10100000' to 00B5
Mapper: Writing '10100000' to 00B6
Mapper: Writing '10100000' to 00B7
Mapper: Writing '10100000' to 00B8
Mapper: Writing '10100000' to 00B9
Mapper: Writing '10100000' to 00BA
Mapper: Writing '10100000' to 00BB
Mapper: Writing '10100000' to 00BC
Mapper: Writing '10100000' to 00BD
Mapper: Writing '10100000' to 00BE
Mapper: Writing '10100000' to 00BF
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_1_001_00_01_000_00_00_01_01_0_0_1_1_0_1' to 00A0
Mapper: Writing '10100001' to 00C0
Mapper: Writing '10100001' to 00C1
Mapper: Writing '10100001' to 00C2
Mapper: Writing '10100001' to 00C3
Mapper: Writing '10100001' to 00C4
Mapper: Writing '10100001' to 00C5
Mapper: Writing '10100001' to 00C6
Mapper: Writing '10100001' to 00C7
Mapper: Writing '10100001' to 00C8
Mapper: Writing '10100001' to 00C9
Mapper: Writing '10100001' to 00CA
Mapper: Writing '10100001' to 00CB
Mapper: Writing '10100001' to 00CC
Mapper: Writing '10100001' to 00CD
Mapper: Writing '10100001' to 00CE
Mapper: Writing '10100001' to 00CF
Code: Writing '0000_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00A1
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00A2
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_010_00_00_00_00_00_0_0_0_001_10_00_000_00_00_01_01_0_0_1_1_0_1' to 00A3
Code: Writing '0000_00000000_00000000_00_00_011_00_00_0_000_00_00_00_00_00_0_1_0_001_00_00_001_00_00_01_01_0_0_1_1_0_1' to 00A4
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_1_001_00_00_001_00_00_01_01_0_0_1_1_0_1' to 00A5
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_00_000_00_00_01_01_0_0_1_1_0_1' to 00A6
Mapper: Overwriting '10100001' with '10100111' at 00C4
Code: Writing '0010_00000100_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00A7
Mapper: Writing '10101000' to 00D0
Mapper: Writing '10101000' to 00D1
Mapper: Writing '10101000' to 00D2
Mapper: Writing '10101000' to 00D3
Mapper: Writing '10101000' to 00D4
Mapper: Writing '10101000' to 00D5
Mapper: Writing '10101000' to 00D6
Mapper: Writing '10101000' to 00D7
Mapper: Writing '10101000' to 00D8
Mapper: Writing '10101000' to 00D9
Mapper: Writing '10101000' to 00DA
Mapper: Writing '10101000' to 00DB
Mapper: Writing '10101000' to 00DC
Mapper: Writing '10101000' to 00DD
Mapper: Writing '10101000' to 00DE
Mapper: Writing '10101000' to 00DF
Code: Writing '0010_00000100_00000000_00_00_000_01_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00A8
Mapper: Writing '10101001' to 00E0
Mapper: Writing '10101001' to 00E1
Mapper: Writing '10101001' to 00E2
Mapper: Writing '10101001' to 00E3
Mapper: Writing '10101001' to 00E4
Mapper: Writing '10101001' to 00E5
Mapper: Writing '10101001' to 00E6
Mapper: Writing '10101001' to 00E7
Mapper: Writing '10101001' to 00E8
Mapper: Writing '10101001' to 00E9
Mapper: Writing '10101001' to 00EA
Mapper: Writing '10101001' to 00EB
Mapper: Writing '10101001' to 00EC
Mapper: Writing '10101001' to 00ED
Mapper: Writing '10101001' to 00EE
Mapper: Writing '10101001' to 00EF
Code: Writing '0010_00000100_00000000_00_00_000_00_01_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00A9
Mapper: Writing '10101010' to 00F0
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00AA
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_001_00_00_01_01_0_0_1_1_0_1' to 00AB
Mapper: Writing '10101100' to 00F1
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00AC
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_01_001_00_00_01_01_0_0_1_1_0_1' to 00AD
Mapper: Writing '10101110' to 00F2
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00AE
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_01_001_01_00_01_01_0_0_1_1_0_1' to 00AF
Mapper: Writing '10110000' to 00F3
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00B0
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_01_001_10_00_01_01_0_0_1_1_0_1' to 00B1
Mapper: Writing '10110010' to 00F4
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00B2
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_01_001_11_00_01_01_0_0_1_1_0_1' to 00B3
Mapper: Writing '10110100' to 00F5
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00B4
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_11_01_01_01_0_0_1_1_0_1' to 00B5
Mapper: Writing '10110110' to 00F6
Line 492: found unmatched = assignments: zero, 
Code: Writing '0010_00000100_00000000_11_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00B6
Mapper: Writing '10110111' to 00F7
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_100_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00B7
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_01_000_11_01_01_01_0_0_1_1_0_1' to 00B8
Mapper: Writing '10111001' to 00F8
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00B9
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_00_001_00_00_01_01_0_0_1_1_0_1' to 00BA
Mapper: Writing '10111011' to 00F9
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00BB
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_01_001_00_00_01_01_0_0_1_1_0_1' to 00BC
Mapper: Writing '10111101' to 00FA
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00BD
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_01_001_01_00_01_01_0_0_1_1_0_1' to 00BE
Mapper: Writing '10111111' to 00FB
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00BF
Code: Writing '0010_00000100_00000000_01_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_01_001_10_00_01_01_0_0_1_1_0_1' to 00C0
Mapper: Writing '11000001' to 00FC
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00C1
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_01_001_11_00_01_01_0_0_1_1_0_1' to 00C2
Mapper: Writing '11000011' to 00FD
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00C3
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_00_000_11_01_01_01_0_0_1_1_0_1' to 00C4
Mapper: Writing '11000101' to 00FE
Line 544: found unmatched = assignments: zero, 
Code: Writing '0010_00000100_00000000_10_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00C5
Mapper: Writing '11000110' to 00FF
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_110_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00C6
Code: Writing '0010_00000100_00000000_01_11_000_00_00_0_000_00_00_00_00_00_0_0_0_001_10_01_000_11_01_01_01_0_0_1_1_0_1' to 00C7
Mapper: Writing '11001000' to 0100
Mapper: Writing '11001000' to 0101
Mapper: Writing '11001000' to 0102
Mapper: Writing '11001000' to 0103
Mapper: Writing '11001000' to 0104
Mapper: Writing '11001000' to 0105
Mapper: Writing '11001000' to 0106
Mapper: Writing '11001000' to 0107
Mapper: Writing '11001000' to 0108
Mapper: Writing '11001000' to 0109
Mapper: Writing '11001000' to 010A
Mapper: Writing '11001000' to 010B
Mapper: Writing '11001000' to 010C
Mapper: Writing '11001000' to 010D
Mapper: Writing '11001000' to 010E
Mapper: Writing '11001000' to 010F
Mapper: Writing '11001000' to 0110
Mapper: Writing '11001000' to 0111
Mapper: Writing '11001000' to 0112
Mapper: Writing '11001000' to 0113
Mapper: Writing '11001000' to 0114
Mapper: Writing '11001000' to 0115
Mapper: Writing '11001000' to 0116
Mapper: Writing '11001000' to 0117
Mapper: Writing '11001000' to 0118
Mapper: Writing '11001000' to 0119
Mapper: Writing '11001000' to 011A
Mapper: Writing '11001000' to 011B
Mapper: Writing '11001000' to 011C
Mapper: Writing '11001000' to 011D
Mapper: Writing '11001000' to 011E
Mapper: Writing '11001000' to 011F
Mapper: Writing '11001000' to 0120
Mapper: Writing '11001000' to 0121
Mapper: Writing '11001000' to 0122
Mapper: Writing '11001000' to 0123
Mapper: Writing '11001000' to 0124
Mapper: Writing '11001000' to 0125
Mapper: Writing '11001000' to 0126
Mapper: Writing '11001000' to 0127
Mapper: Writing '11001000' to 0128
Mapper: Writing '11001000' to 0129
Mapper: Writing '11001000' to 012A
Mapper: Writing '11001000' to 012B
Mapper: Writing '11001000' to 012C
Mapper: Writing '11001000' to 012D
Mapper: Writing '11001000' to 012E
Mapper: Writing '11001000' to 012F
Mapper: Writing '11001000' to 0130
Mapper: Writing '11001000' to 0131
Mapper: Writing '11001000' to 0132
Mapper: Writing '11001000' to 0133
Mapper: Writing '11001000' to 0134
Mapper: Writing '11001000' to 0135
Mapper: Writing '11001000' to 0136
Mapper: Writing '11001000' to 0137
Mapper: Writing '11001000' to 0138
Mapper: Writing '11001000' to 0139
Mapper: Writing '11001000' to 013A
Mapper: Writing '11001000' to 013B
Mapper: Writing '11001000' to 013C
Mapper: Writing '11001000' to 013D
Mapper: Writing '11001000' to 013E
Mapper: Writing '11001000' to 013F
Mapper: Writing '11001000' to 0140
Mapper: Writing '11001000' to 0141
Mapper: Writing '11001000' to 0142
Mapper: Writing '11001000' to 0143
Mapper: Writing '11001000' to 0144
Mapper: Writing '11001000' to 0145
Mapper: Writing '11001000' to 0146
Mapper: Writing '11001000' to 0147
Mapper: Writing '11001000' to 0148
Mapper: Writing '11001000' to 0149
Mapper: Writing '11001000' to 014A
Mapper: Writing '11001000' to 014B
Mapper: Writing '11001000' to 014C
Mapper: Writing '11001000' to 014D
Mapper: Writing '11001000' to 014E
Mapper: Writing '11001000' to 014F
Mapper: Writing '11001000' to 0150
Mapper: Writing '11001000' to 0151
Mapper: Writing '11001000' to 0152
Mapper: Writing '11001000' to 0153
Mapper: Writing '11001000' to 0154
Mapper: Writing '11001000' to 0155
Mapper: Writing '11001000' to 0156
Mapper: Writing '11001000' to 0157
Mapper: Writing '11001000' to 0158
Mapper: Writing '11001000' to 0159
Mapper: Writing '11001000' to 015A
Mapper: Writing '11001000' to 015B
Mapper: Writing '11001000' to 015C
Mapper: Writing '11001000' to 015D
Mapper: Writing '11001000' to 015E
Mapper: Writing '11001000' to 015F
Mapper: Writing '11001000' to 0160
Mapper: Writing '11001000' to 0161
Mapper: Writing '11001000' to 0162
Mapper: Writing '11001000' to 0163
Mapper: Writing '11001000' to 0164
Mapper: Writing '11001000' to 0165
Mapper: Writing '11001000' to 0166
Mapper: Writing '11001000' to 0167
Mapper: Writing '11001000' to 0168
Mapper: Writing '11001000' to 0169
Mapper: Writing '11001000' to 016A
Mapper: Writing '11001000' to 016B
Mapper: Writing '11001000' to 016C
Mapper: Writing '11001000' to 016D
Mapper: Writing '11001000' to 016E
Mapper: Writing '11001000' to 016F
Mapper: Writing '11001000' to 0170
Mapper: Writing '11001000' to 0171
Mapper: Writing '11001000' to 0172
Mapper: Writing '11001000' to 0173
Mapper: Writing '11001000' to 0174
Mapper: Writing '11001000' to 0175
Mapper: Writing '11001000' to 0176
Mapper: Writing '11001000' to 0177
Mapper: Writing '11001000' to 0178
Mapper: Writing '11001000' to 0179
Mapper: Writing '11001000' to 017A
Mapper: Writing '11001000' to 017B
Mapper: Writing '11001000' to 017C
Mapper: Writing '11001000' to 017D
Mapper: Writing '11001000' to 017E
Mapper: Writing '11001000' to 017F
Mapper: Writing '11001000' to 0180
Mapper: Writing '11001000' to 0181
Mapper: Writing '11001000' to 0182
Mapper: Writing '11001000' to 0183
Mapper: Writing '11001000' to 0184
Mapper: Writing '11001000' to 0185
Mapper: Writing '11001000' to 0186
Mapper: Writing '11001000' to 0187
Mapper: Writing '11001000' to 0188
Mapper: Writing '11001000' to 0189
Mapper: Writing '11001000' to 018A
Mapper: Writing '11001000' to 018B
Mapper: Writing '11001000' to 018C
Mapper: Writing '11001000' to 018D
Mapper: Writing '11001000' to 018E
Mapper: Writing '11001000' to 018F
Mapper: Writing '11001000' to 0190
Mapper: Writing '11001000' to 0191
Mapper: Writing '11001000' to 0192
Mapper: Writing '11001000' to 0193
Mapper: Writing '11001000' to 0194
Mapper: Writing '11001000' to 0195
Mapper: Writing '11001000' to 0196
Mapper: Writing '11001000' to 0197
Mapper: Writing '11001000' to 0198
Mapper: Writing '11001000' to 0199
Mapper: Writing '11001000' to 019A
Mapper: Writing '11001000' to 019B
Mapper: Writing '11001000' to 019C
Mapper: Writing '11001000' to 019D
Mapper: Writing '11001000' to 019E
Mapper: Writing '11001000' to 019F
Mapper: Writing '11001000' to 01A0
Mapper: Writing '11001000' to 01A1
Mapper: Writing '11001000' to 01A2
Mapper: Writing '11001000' to 01A3
Mapper: Writing '11001000' to 01A4
Mapper: Writing '11001000' to 01A5
Mapper: Writing '11001000' to 01A6
Mapper: Writing '11001000' to 01A7
Mapper: Writing '11001000' to 01A8
Mapper: Writing '11001000' to 01A9
Mapper: Writing '11001000' to 01AA
Mapper: Writing '11001000' to 01AB
Mapper: Writing '11001000' to 01AC
Mapper: Writing '11001000' to 01AD
Mapper: Writing '11001000' to 01AE
Mapper: Writing '11001000' to 01AF
Mapper: Writing '11001000' to 01B0
Mapper: Writing '11001000' to 01B1
Mapper: Writing '11001000' to 01B2
Mapper: Writing '11001000' to 01B3
Mapper: Writing '11001000' to 01B4
Mapper: Writing '11001000' to 01B5
Mapper: Writing '11001000' to 01B6
Mapper: Writing '11001000' to 01B7
Mapper: Writing '11001000' to 01B8
Mapper: Writing '11001000' to 01B9
Mapper: Writing '11001000' to 01BA
Mapper: Writing '11001000' to 01BB
Mapper: Writing '11001000' to 01BC
Mapper: Writing '11001000' to 01BD
Mapper: Writing '11001000' to 01BE
Mapper: Writing '11001000' to 01BF
Mapper: Writing '11001000' to 01C0
Mapper: Writing '11001000' to 01C1
Mapper: Writing '11001000' to 01C2
Mapper: Writing '11001000' to 01C3
Mapper: Writing '11001000' to 01C4
Mapper: Writing '11001000' to 01C5
Mapper: Writing '11001000' to 01C6
Mapper: Writing '11001000' to 01C7
Mapper: Writing '11001000' to 01C8
Mapper: Writing '11001000' to 01C9
Mapper: Writing '11001000' to 01CA
Mapper: Writing '11001000' to 01CB
Mapper: Writing '11001000' to 01CC
Mapper: Writing '11001000' to 01CD
Mapper: Writing '11001000' to 01CE
Mapper: Writing '11001000' to 01CF
Mapper: Writing '11001000' to 01D0
Mapper: Writing '11001000' to 01D1
Mapper: Writing '11001000' to 01D2
Mapper: Writing '11001000' to 01D3
Mapper: Writing '11001000' to 01D4
Mapper: Writing '11001000' to 01D5
Mapper: Writing '11001000' to 01D6
Mapper: Writing '11001000' to 01D7
Mapper: Writing '11001000' to 01D8
Mapper: Writing '11001000' to 01D9
Mapper: Writing '11001000' to 01DA
Mapper: Writing '11001000' to 01DB
Mapper: Writing '11001000' to 01DC
Mapper: Writing '11001000' to 01DD
Mapper: Writing '11001000' to 01DE
Mapper: Writing '11001000' to 01DF
Mapper: Writing '11001000' to 01E0
Mapper: Writing '11001000' to 01E1
Mapper: Writing '11001000' to 01E2
Mapper: Writing '11001000' to 01E3
Mapper: Writing '11001000' to 01E4
Mapper: Writing '11001000' to 01E5
Mapper: Writing '11001000' to 01E6
Mapper: Writing '11001000' to 01E7
Mapper: Writing '11001000' to 01E8
Mapper: Writing '11001000' to 01E9
Mapper: Writing '11001000' to 01EA
Mapper: Writing '11001000' to 01EB
Mapper: Writing '11001000' to 01EC
Mapper: Writing '11001000' to 01ED
Mapper: Writing '11001000' to 01EE
Mapper: Writing '11001000' to 01EF
Mapper: Writing '11001000' to 01F0
Mapper: Writing '11001000' to 01F1
Mapper: Writing '11001000' to 01F2
Mapper: Writing '11001000' to 01F3
Mapper: Writing '11001000' to 01F4
Mapper: Writing '11001000' to 01F5
Mapper: Writing '11001000' to 01F6
Mapper: Writing '11001000' to 01F7
Mapper: Writing '11001000' to 01F8
Mapper: Writing '11001000' to 01F9
Mapper: Writing '11001000' to 01FA
Mapper: Writing '11001000' to 01FB
Mapper: Writing '11001000' to 01FC
Mapper: Writing '11001000' to 01FD
Mapper: Writing '11001000' to 01FE
Mapper: Writing '11001000' to 01FF
Code: Writing '1111_00000000_00000000_00_00_000_00_00_0_000_00_00_00_00_00_0_0_0_001_00_00_000_00_00_01_01_0_0_1_1_0_1' to 00C8
Generating code: 
Found 55 uninitialized locations:
0000 .. 0000
Generating 'C:\Users\zoltanp\Documents\HexCalc\Sys9900\mcc\cdp180x_code.hex' ... Done.
Generating mapping: 
Generating 'C:\Users\zoltanp\Documents\HexCalc\Sys9900\mcc\cdp180x_map.hex' ... Done.
Pass 2 succeeded: 2 file(s) generated.
